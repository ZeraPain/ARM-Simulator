<RibbonWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ARM_Simulator.ViewModel"
        mc:Ignorable="d"
        x:Class="ARM_Simulator.View.MainWindow"
        Title="{Binding AppTitle}" 
        Width="auto"
        Height="auto" 
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterScreen">
    <RibbonWindow.DataContext>
        <local:SimulatorViewModel/>
    </RibbonWindow.DataContext>
    <DockPanel LastChildFill="True">
        <Ribbon DockPanel.Dock="Top" Height="130">

            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu SmallImageSource="/Resources/Images/ApplicationMenu.png">
                    <RibbonApplicationMenuItem Header="New File" ImageSource="/Resources/Images/new.png" Click="BtnNewFile_Click" />
                    <RibbonApplicationMenuItem Header="Open File" ImageSource="/Resources/Images/open.png" Click="BtnLoadFile_Click"/>
                    <RibbonApplicationMenuItem Header="Save File" ImageSource="/Resources/Images/save.png" Click="BtnSaveFile_Click" />
                    <RibbonApplicationMenuItem Header="Exit" ImageSource="/Resources/Images/exit.png" Click="BtnExitFile_Click"/>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Main" Margin="0,0,0,8">
                <RibbonGroup Header="Runtime">
                    <RibbonButton Label="Run" LargeImageSource="/Resources/Images/run.png" Command="{Binding RunCommand}" />
                    <RibbonButton Label="Stop" LargeImageSource="/Resources/Images/stop.png" Command="{Binding StopCommand}" />
                    <RibbonButton Label="Tick" LargeImageSource="/Resources/Images/tick.png" Command="{Binding TickCommand}" />
                    <RibbonButton Label="Continue" LargeImageSource="/Resources/Images/continue.png" Command="{Binding ContinueCommand}" />
                    <RibbonButton Label="Pause" LargeImageSource="/Resources/Images/pause.png" Command="{Binding PauseCommand}" />
                </RibbonGroup>
            </RibbonTab>
            <RibbonTab Header="Options" Margin="0,0,0,8">
                <RibbonGroup Header="Pipelining View">
                    <StackPanel Orientation="Vertical">
                        <RibbonCheckBox HorizontalAlignment="Left" Label="Fetch" Height="18" Background="LawnGreen" IsChecked="{Binding Path=CoreVm.DisplayFetch}"/>
                        <RibbonCheckBox HorizontalAlignment="Left" Label="Decode" Height="18" Background="Yellow" IsChecked="{Binding Path=CoreVm.DisplayDecode}"/>
                        <RibbonCheckBox HorizontalAlignment="Left" Label="Excecute" Height="18" Background="OrangeRed" IsChecked="{Binding Path=CoreVm.DisplayExecute}"/>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup x:Name="OptionGroupBreakpoints" Header="Breakpoints">
                    <StackPanel Orientation="Horizontal">
                        <RibbonButton x:Name="CheckBoxShowBreakpoints" Label="Show"  LargeImageSource="/Resources/Images/showBP.png"  Click="CheckBoxShowBreakpoints_OnClick"/>
                        <RibbonButton x:Name="CheckBoxRemoveBreakpoints" Label="Remove" LargeImageSource="/Resources/Images/removeBP.png" Click="CheckBoxRemoveBreakpoints_OnClick"/>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <StackPanel>
            <!-- This is only visible while editing a file -->
            <Grid x:Name="EditMode" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='Editor'}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="350" />
                    <RowDefinition Height="120" />
                </Grid.RowDefinitions>

                <RichTextBox AcceptsReturn="True" x:Name="RichTextBoxEditor" Grid.Row="0" AcceptsTab="True" KeyDown="RichTextBoxEditor_OnKeyDown">
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </RichTextBox.Resources>
                </RichTextBox>
                <RichTextBox x:Name="RichTextBoxLog" Grid.Row="1" IsEnabled="False">
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </RichTextBox.Resources>
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="+++ Output Window +++"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
            </Grid>

            <!-- This is only visible while debugging a file -->
            <Grid x:Name="DebugMode" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='Debugger'}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="320" />
                    <RowDefinition Height="150" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="150" />
                </Grid.ColumnDefinitions>

                <!-- Code section -->
                <ListView Grid.Row="0" Grid.Column="0" x:Name="ListViewCode" MouseDoubleClick="ListViewCode_MouseDoubleClick" ItemsSource="{Binding Path=CoreVm.CommandList, Mode=TwoWay}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter Property="Background" Value="LawnGreen" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="2">
                                    <Setter Property="Background" Value="Yellow" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="3">
                                    <Setter Property="Background" Value="OrangeRed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="BP" Width="20" DisplayMemberBinding="{Binding Converter={StaticResource BreakpointConverter}}"/>
                            <GridViewColumn Header="Label" Width="50" DisplayMemberBinding="{Binding Label}"/>
                            <GridViewColumn Header="Code" Width="Auto" DisplayMemberBinding="{Binding Commandline}" />
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- Register view -->
                <ListView Grid.Row="0" Grid.Column="1" x:Name="ListViewRegister" ItemsSource="{Binding Path=CoreVm.RegisterList}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Height" Value="17"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Register" Width="60" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="Value" Width="80" DisplayMemberBinding="{Binding Value}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- Memory view -->
                <ListView x:Name="ListViewMemory" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Path=MemoryVm.MemoryView}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Address" Width="70" DisplayMemberBinding="{Binding BaseAddress}"/>
                            <GridViewColumn Header="Memory Data" Width="Auto" DisplayMemberBinding="{Binding MemoryString}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

            </Grid>
            
        </StackPanel>
    </DockPanel>
</RibbonWindow>































































