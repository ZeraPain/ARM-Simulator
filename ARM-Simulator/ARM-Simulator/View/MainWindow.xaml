<RibbonWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ARM_Simulator.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        x:Class="ARM_Simulator.View.MainWindow"
        Title="{Binding File, Converter={StaticResource TitleConverter}}" 
        Width="900"
        Height="700"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Loaded="RibbonWindow_Loaded"
        Icon="/Resources/Images/Icon.png">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Path=ExitCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <RibbonWindow.DataContext>
        <local:SimulatorViewModel/>
    </RibbonWindow.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!-- This Ribbon Editor Menu is only visible while editing a file -->
        <Ribbon Grid.Row="0" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='invert'}">
            <!-- Application Menu -->
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu x:Name="RibbonApplicationMenuEdit" SmallImageSource="/Resources/Images/ApplicationMenu.png">
                    <RibbonApplicationMenuItem Header="New File" ToolTip="Open a new File"  ImageSource="/Resources/Images/new.png" Command="{Binding Path=NewFileCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                    <RibbonApplicationMenuItem Header="Open File" ToolTip="Open an existing File" ImageSource="/Resources/Images/open.png" Command="{Binding Path=LoadFileCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                    <RibbonApplicationMenuItem Header="Save File" ToolTip="Save the current File" ImageSource="/Resources/Images/save.png" Command="{Binding Path=SaveFileCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                    <RibbonApplicationMenuItem Header="Save As" ToolTip="Save the current File" ImageSource="/Resources/Images/save.png" Command="{Binding Path=SaveFileAsCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                    <RibbonApplicationMenuItem Header="Exit" ToolTip="Exit ARM-Simulator" ImageSource="/Resources/Images/exit.png" Command="{Binding Path=ExitCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Editor">
                <RibbonGroup >
                    <RibbonButton Label="Run" LargeImageSource="/Resources/Images/run.png" Width="auto" Height="auto" Command="{Binding Path=RunCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                </RibbonGroup>
                <RibbonGroup >
                    <RibbonButton Label="Save" LargeImageSource="/Resources/Images/save.png" Width="auto" Height="auto" Command="{Binding Path=SaveFileCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                </RibbonGroup>
                <RibbonGroup Header="Extras">
                    <RibbonButton Label="Syntax" LargeImageSource="/Resources/Images/check.png" Width="auto" Height="auto" Command="{Binding SyntaxCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}"/>
                    <Separator/>
                    <CheckBox Content="Allow Unsafe Code" Height="18"  IsChecked="{Binding ArmSimulator.Memory.AllowUnsafeCode}" />
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <!-- This Ribbon Debug Menu is only visible while debugging a file -->
        <Ribbon Grid.Row="0" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}}">
            <!-- Application Menu -->
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu x:Name="RibbonApplicationMenuDebug" SmallImageSource="/Resources/Images/ApplicationMenu.png" >
                    <RibbonApplicationMenuItem Header="Exit" ToolTip="Exit ARM-Simulator" ImageSource="/Resources/Images/exit.png" Command="{Binding Path=ExitCommand}" CommandParameter="{Binding ElementName=RichTextBoxEditor, Path=Document}" />
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Debugger">
                <RibbonGroup Header="Runtime">
                    <RibbonButton Label="Restart"  LargeImageSource="/Resources/Images/restart.png" Width="auto" Height="auto" Command="{Binding Path=RestartCommand}" />
                    <RibbonButton Label="Stop" LargeImageSource="/Resources/Images/stop.png" Width="auto" Height="auto" Command="{Binding Path=StopCommand}" />
                    <RibbonButton Label="Tick" LargeImageSource="/Resources/Images/tick.png" Width="auto" Height="auto" Command="{Binding Path=TickCommand}" />
                    <RibbonButton Label="Continue" LargeImageSource="/Resources/Images/continue.png" Width="auto" Height="auto" Command="{Binding Path=ContinueCommand}" />
                    <RibbonButton Label="Pause" LargeImageSource="/Resources/Images/pause.png" Width="auto" Height="auto" Command="{Binding Path=PauseCommand}" />
                </RibbonGroup>
                <RibbonGroup Header="Pipelining View">
                    <StackPanel Orientation="Vertical">
                        <CheckBox HorizontalAlignment="Left" Height="18" Width="auto" IsChecked="{Binding Path=CoreVm.DisplayFetch}">
                            <CheckBox.Content>
                                <TextBlock Width="50" Height="18" Text="Fetch" Foreground="Black"  FontWeight="Bold" Background="LawnGreen" />
                            </CheckBox.Content>
                        </CheckBox>
                        <CheckBox HorizontalAlignment="Left"  Height="18"  IsChecked="{Binding Path=CoreVm.DisplayDecode}">
                            <CheckBox.Content>
                                <TextBlock Width="50" Height="18" Text="Decode" Foreground="Black"  FontWeight="Bold" Background="Yellow" />
                            </CheckBox.Content>
                        </CheckBox>
                        <CheckBox HorizontalAlignment="Left" Height="18" IsChecked="{Binding Path=CoreVm.DisplayExecute}">
                            <CheckBox.Content>
                                <TextBlock Width="50" Height="18" Text="Execute" Foreground="Black"  FontWeight="Bold" Background="OrangeRed" />
                            </CheckBox.Content>
                        </CheckBox>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup x:Name="OptionGrouppoints" Header="Breakpoints">
                    <StackPanel Orientation="Horizontal">
                        <RibbonButton Label="Show"  LargeImageSource="/Resources/Images/showBP.png"  Width="auto" Height="auto" Command="{Binding Path=ShowBreakpointsCommand}" />
                        <RibbonButton Label="Remove" LargeImageSource="/Resources/Images/removeBP.png" Width="auto" Height="auto" Command="{Binding Path=CoreVm.RemoveBreakpointsCommand}" />
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Display Numeric Type">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                            <StackPanel Orientation="Vertical" Margin="0,0,5,0" Width="50">
                                <RadioButton GroupName="NumberStyleMemory" Content="Dec" FontSize="12"  IsChecked="{Binding Path=ShowAsHexadecimal, Converter={StaticResource BoolInverter}}"/>
                                <RadioButton GroupName="NumberStyleMemory" Content="Hex"  FontSize="12"  IsChecked="{Binding Path=ShowAsHexadecimal}" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="0,0,5,0" Width="60">
                                <RadioButton GroupName="DataTypeMemory" Content="Word"  FontSize="12" IsChecked="{Binding Path=ShowAsByte, Converter={StaticResource BoolInverter}}" />
                                <RadioButton GroupName="DataTypeMemory" Content="Byte" FontSize="12" IsChecked="{Binding Path=ShowAsByte}" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Width="70">
                                <RadioButton GroupName="SignedMemory" Content="Unsigned" FontSize="12"  IsChecked="{Binding Path=ShowAsSigned, Converter={StaticResource BoolInverter}}" />
                                <RadioButton GroupName="SignedMemory" Content="Signed" FontSize="12" IsChecked="{Binding Path=ShowAsSigned}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <!-- StatusBar Bottom -->
        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding Path=DebugMode, Converter={StaticResource StatusTextConverter}, ConverterParameter='Editor'}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <Image Source="{Binding Path=DebugMode, Converter={StaticResource StatusConverter}, ConverterParameter='Editor'}"/>
            </StatusBarItem>
        </StatusBar>

        <!-- This is only visible while editing a file -->
        <Grid Grid.Row="1" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='invert'}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>

            <RichTextBox AcceptsReturn="True" x:Name="RichTextBoxEditor" Grid.Row="0" AcceptsTab="True" KeyDown="RichTextBoxEditor_OnKeyDown">
                <RichTextBox.Resources>
                    <Style TargetType="{x:Type Paragraph}">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </RichTextBox.Resources>
            </RichTextBox>

            <!-- Output Window for Error Message -->
            <ListView x:Name="ListViewLog" Grid.Row="1" ItemsSource="{Binding ErrorMessages}">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Background" Value="DarkOrange" />
                        <Setter Property="BorderBrush" Value="OrangeRed"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Error Message" Width="auto" DisplayMemberBinding="{Binding}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <!-- This is only visible while debugging a file -->
        <Grid Grid.Row="1" Visibility="{Binding Path=DebugMode, Converter={StaticResource VisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="150" />
            </Grid.ColumnDefinitions>

            <!-- Code section -->
            <ListView Grid.Row="0" Grid.Column="0" x:Name="ListViewCode" MouseDoubleClick="ListViewCode_MouseDoubleClick" ItemsSource="{Binding Path=CoreVm.CommandList}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="1">
                                <Setter Property="Background" Value="LawnGreen" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="2">
                                <Setter Property="Background" Value="Yellow" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="3">
                                <Setter Property="Background" Value="OrangeRed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="BP" Width="20" DisplayMemberBinding="{Binding Breakpoint, Converter={StaticResource BreakpointConverter}}"/>
                        <GridViewColumn Header="Address" Width="50" DisplayMemberBinding="{Binding Address, Converter={StaticResource UintToHexConverter}, ConverterParameter='X4'}"/>
                        <GridViewColumn Header="Label" Width="70" DisplayMemberBinding="{Binding Label}"/>
                        <GridViewColumn Header="Code" Width="auto" DisplayMemberBinding="{Binding Commandline}" />
                    </GridView>
                </ListView.View>
            </ListView>

            <!-- Register view -->
            <DataGrid Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=ArmSimulator.ArmCore.RegisterList}" AutoGenerateColumns="False" CanUserReorderColumns="False" SelectionUnit="Cell" CanUserAddRows="False" GridLinesVisibility="None" RowHeight="20">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Register" Width="auto" Binding="{Binding Register}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Value" Width="80*" Binding="{Binding Value, Converter={StaticResource RegisterValueConverter}, Mode=TwoWay}"/>
                </DataGrid.Columns>
            </DataGrid>
            
            <!-- Memory view -->
            <DataGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" CellEditEnding="DataGridMemory_OnCellEditEnding" ItemsSource="{Binding Path=MemoryVm.MemoryView}" AutoGenerateColumns="False" CanUserReorderColumns="False" SelectionUnit="Cell" CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Address" Width="80" Binding="{Binding BaseAddress, Converter={StaticResource UintToHexConverter}}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="0x00" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='0'}"/>
                    <DataGridTextColumn Header="0x04" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='1'}"/>
                    <DataGridTextColumn Header="0x08" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='2'}"/>
                    <DataGridTextColumn Header="0x0C" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='3'}"/>
                    <DataGridTextColumn Header="0x10" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='4'}"/>
                    <DataGridTextColumn Header="0x14" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='5'}"/>
                    <DataGridTextColumn Header="0x18" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='6'}"/>
                    <DataGridTextColumn Header="0x1C" Width="80" Binding="{Binding MemoryBytes, Converter={StaticResource MemoryValueConverter}, ConverterParameter='7'}"/>
                    <DataGridTextColumn Header="ASCII" Width="80*" Binding="{Binding MemoryBytes, Converter={StaticResource ByteArrayToAsciiConverter}}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</RibbonWindow>